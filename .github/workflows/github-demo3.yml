name: Deploy-Demo

on:
  pull_request:
    branches:
      - master
  push:

env:
  DAY_OF_WEEK: Monday

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7.13
          architecture: x64

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install flake8
        continue-on-error: true
        run: |
          pip install flake8
          echo ${DAY_OF_WEEK}
          # flake8 ./

      - name: Run flake8
        continue-on-error: true
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: 'Lint'   # NOTE: this needs to be the same as the job name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Internal_Test:
    needs: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup MongoDB docker
        run: |
          cd InternalTest
          docker-compose build
          docker-compose up -d

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7.13
          architecture: x64

      - name: Install python lib
        run: |
          pip install pytest pytest-cov
          pip install pymongo

      - name: Run internal test
        run: |
          cd InternalTest
          pytest test_internal.py -v --cov=../CPSSVOperationTimeService --cov-report=term-missing

  External_Test:
    needs: Internal_Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: archive files
        run: |
          mkdir ./archives
          ls
          cd ./CPSSVOperationTimeService
          zip -rq ../archives/CPSSVOperationTimeService.zip ./*
      
      - name: upload files for S3
        run: |
          ls
          aws s3 cp ./archives/CPSSVOperationTimeService.zip  s3://dev-nakano-testdata/
        
      - name: set files to lambda
        run: |
          aws lambda update-function-code --function-name CPSSVOperationTimeService_nakano --s3-bucket dev-nakano-testdata  --s3-key CPSSVOperationTimeService.zip --publish
      
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7.13
          architecture: x64

      - name: Install python lib
        run: |
          pip install pytest

      - name: Run external test
        continue-on-error: true
        run: |
          cd ExternalTest
          pytest

  Deploy:
    needs: External_Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v10.1
      
      - name: check diff file name
        run: |
          echo ${{ steps.changed-files.outputs.all_modified_files }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: archive files
        run: |
          mkdir ./archives
          ls
          cd ./CPSSVOperationTimeService
          zip -rq ../archives/CPSSVOperationTimeService.zip ./*

      - name: upload files for S3
        run: |
          ls
          aws s3 cp ./archives/CPSSVOperationTimeService.zip  s3://dev-nakano-testdata/

      - name: set files to lambda
        run: |
          aws lambda update-function-code --function-name CPSSVOperationTimeService_nakano --s3-bucket dev-nakano-testdata  --s3-key CPSSVOperationTimeService.zip --publish
